# 멀티 스테이지 빌드를 사용하여 최적화된 이미지 생성

# 1단계: 빌드 스테이지
FROM maven:3.9.10-eclipse-temurin-17 AS build

# 작업 디렉토리 설정
WORKDIR /app

# pom.xml과 소스 코드 복사
COPY pom.xml .
COPY src ./src

# Maven 빌드 실행 (테스트 제외)
RUN mvn clean package -DskipTests

# 2단계: 실행 스테이지
FROM openjdk:17-jdk-slim

# 시스템 패키지 업데이트 및 필요 도구 설치
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 애플리케이션 실행을 위한 사용자 생성
RUN useradd -m -s /bin/bash appuser

# 작업 디렉토리 설정
WORKDIR /app

# 빌드 스테이지에서 JAR 파일 복사
COPY --from=build /app/target/*.jar app.jar

# 파일 소유권을 appuser로 변경
RUN chown appuser:appuser app.jar

# 비루트 사용자로 실행
USER appuser

# 애플리케이션이 사용할 포트 노출
EXPOSE 8080

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

# JVM 옵션 설정 및 애플리케이션 실행
ENTRYPOINT ["java", \
    "-Xmx512m", \
    "-Xms256m", \
    "-Djava.security.egd=file:/dev/./urandom", \
    "-Dspring.profiles.active=docker", \
    "-jar", \
    "app.jar"]